# 5.1 Напишіть функцію real_len, яка підраховує та повертає довжину рядка без наступних керівних символів: [\n, \f, \r, \t, \v]
# Для перевірки правильності роботи функції real_len їй будуть передані наступні рядки:
# 'Alex\nKdfe23\t\f\v.\r'
# 'Al\nKdfe23\t\v.\r'
# -----------------------------------------------------------------------------------------------

import re

def real_len(text):
    new_text = re.sub(r'\s', '', text)
    return len(new_text)
print(real_len('Alex\nKdfe23\t\f\v.\r'))
    
# 5.2 Ваша компанія веде блог. Треба реалізувати функцію find_articles для пошуку за статтями цього блогу. Є список articles_dict, 
# в якому міститься опис статей блогу. Кожен елемент цього списку є словником з наступними ключами: прізвища авторів - ключ 'author',
# назва статті - ключ 'title', рік видання - ключ 'year'.
# Реалізуйте функцію find_articles,
# Параметр key функції визначає поєднання букв для пошуку. Наприклад, при key="Python" функція шукає, чи є у списку articles_dict статті, 
# у назві чи іменах авторів яких зустрічається це поєднання літер. Якщо такі елементи списку були знайдені, треба повернути новий список зі словників, 
# що містять прізвища авторів, назву та рік видання всіх таких статей.
# Другий ключовий параметр функції letter_case визначає, чи треба враховувати під час пошуку регістр літер. За умовчанням він дорівнює False
# і регістр немає значення тобто пошук в тексті "Python" і "python" це те ж саме. Інакше потрібно шукати повний збіг.
# -----------------------------------------------------------------------------------------------
